[{"/Users/damianodelbello/Documents/Web Development/React/robinhood/src/reportWebVitals.js":"1","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/App.js":"2","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/Header.js":"3","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/index.js":"4","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/Newsfeed.js":"5","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/Stats.js":"6","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/LineGraph.js":"7","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/StatsRow.js":"8","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/firebase.js":"9","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/TimeLine.js":"10"},{"size":362,"mtime":1606733439000,"results":"11","hashOfConfig":"12"},{"size":496,"mtime":1606858436000,"results":"13","hashOfConfig":"12"},{"size":1031,"mtime":1606819654000,"results":"14","hashOfConfig":"12"},{"size":500,"mtime":1606733439000,"results":"15","hashOfConfig":"12"},{"size":2392,"mtime":1607532896000,"results":"16","hashOfConfig":"12"},{"size":3580,"mtime":1607460338000,"results":"17","hashOfConfig":"12"},{"size":2708,"mtime":1606950154000,"results":"18","hashOfConfig":"12"},{"size":779,"mtime":1607364340000,"results":"19","hashOfConfig":"12"},{"size":458,"mtime":1607426111000,"results":"20","hashOfConfig":"12"},{"size":693,"mtime":1607466901000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"14ucyv6",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/damianodelbello/Documents/Web Development/React/robinhood/src/reportWebVitals.js",[],["49","50"],"/Users/damianodelbello/Documents/Web Development/React/robinhood/src/App.js",[],["51","52"],"/Users/damianodelbello/Documents/Web Development/React/robinhood/src/Header.js",["53","54","55","56","57","58"],"import React, { Component } from 'react'\nimport logo from './robinhood.svg';\nimport './Header.css'; \n\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header__wrapper\">\n                {/* logo */}\n                <div className=\"header__logo\">\n                    <img src={logo} width={25}/>\n                </div>\n                {/* search */}\n                <div className=\"header__search\">\n                    <div className=\"header__searchContainer\">\n                        \n                        <input type=\"text\" placeholder=\"Search\" />\n                    </div>\n                </div>\n                {/* menuitems */}\n                <div className=\"header__menuItems\">\n                    <a href=\"#\">Free Stocks</a>\n                    <a href=\"#\">Portfolio</a>\n                    <a href=\"#\">Cash</a>\n                    <a href=\"#\">Messages</a>\n                    <a href=\"#\">Account</a>\n                </div>\n            </div>\n        )\n    }\n}\n\n",["59","60"],"/Users/damianodelbello/Documents/Web Development/React/robinhood/src/index.js",[],"/Users/damianodelbello/Documents/Web Development/React/robinhood/src/Newsfeed.js",["61"],"import React, { useState } from 'react';\nimport './Newsfeed.css';\nimport LineGraph from './LineGraph.js';\nimport TimeLine from './TimeLine.js';\nimport Chip from '@material-ui/core/Chip';\nimport { Avatar } from '@material-ui/core';\n\n\nexport default function Newsfeed() {\n\n    const [popularTopics, setTopics] = useState([\n        \"Technology\",\n        \"Top Movies\",\n        \"Upcoming Earnings\",\n        \"Crypto\",\n        \"Cannabis\",\n        \"Healthcare Supplies\",\n        \"Index ETFs\",\n        \"Technology\",\n        \"China\",\n        \"Pharma\",\n    ]);\n\n    return (\n        <div className=\"Newsfeed\">\n            <div className=\"newsfeed__container\">\n                <div className=\"newsfeed__chartSection\">\n                    <div className=\"newsfeed__portfolio\">\n                        <h1>$114,656</h1>\n                        <p>+$44.63 (+ 0.04%) Today </p>\n                    </div>\n                    <div className=\"newsfeed__chart\">\n                        <LineGraph />\n                        <TimeLine />\n                    </div>\n                </div>\n                <div className=\"newsfeed__buying__section\">\n                    <h2> Buying Power</h2>\n                    <h2> $ 4.11</h2>\n                </div>\n                <div className=\"newsfeed__market__section\">\n                    <div className=\"newsfeed__market__box\">\n                        <p> Markets closed</p>\n                        <h1> Happy Thanksgiving</h1>\n                    </div>\n                </div>\n                <div className=\"newsfeed__popularlists__section\">\n                    <div className=\"newsfeed__popularlists__intro\">\n                        <h1>Popular lists</h1>\n                        <p>Show More</p>\n                    </div>\n                    <div className=\"newsfeed_popularlists_badges\">\n                        {popularTopics.map((topic) => (\n                            <Chip\n                                className=\"topic__badge\"\n                                variant=\"outlined\"\n                                label={topic}\n                                avatar={<Avatar\n                                    src={`https://avatars.dicebear.com/api/human/${topic}.svg`}\n                                />}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/Stats.js",["62","63","64"],"import React, { useState, useEffect } from 'react';\nimport './Stats.css';\nimport axios from \"axios\";\nimport StatsRow from './StatsRow.js';\nimport { db } from './firebase';\n\nconst TOKEN = \"bv54t5f48v6qnllcpstg\";\nconst BASE_URL = 'https://finnhub.io/api/v1/quote';\n\n\n\n\nexport default function Stats() {\n\n    const [stockData, setStockData] = useState([]);\n    const [myStocks, setMyStocks] = useState([]);\n\n    const getMyStocks = () => {\n        db\n            .collection('myStocks')\n            .onSnapshot(snapshot => {\n\n                let promises = [];\n                let tempData = []\n                snapshot.docs.map((doc) => {\n\n                    promises.push(getStocksData(doc.data().ticker)\n                        .then(res => {\n                            tempData.push({\n                                id: doc.id,\n                                data: doc.data(),\n                                info: res.data\n                            })\n                        })\n                    )\n                })\n                Promise.all(promises).then(() => {\n                    setMyStocks(tempData);\n                })\n            })\n    }\n\n\n    const getStocksData = (stock) => {\n        return axios\n            .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\n            .catch((error) => {\n                console.error(\"Error\", error.message);\n            });\n    }\n\n    useEffect(() => {\n        let tempStocksData = [];\n        const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\n        let promises = [];\n        getMyStocks();\n        stocksList.map((stock) => {\n            promises.push(\n                getStocksData(stock)\n                    .then((res) => {\n                        tempStocksData.push({\n                            name: stock,\n                            ...res.data\n                        });\n                    })\n            )\n        });\n\n        Promise.all(promises).then(() => {\n            setStockData(tempStocksData);\n        })\n    }, [])\n\n\n    return (\n        <div className=\"stats\">\n            <div className=\"stats__container\">\n                <div className=\"stats__header\">\n                    <p>Stocks</p>\n                </div>\n                <div className=\"stats__content\">\n                    <div className=\"stats__rows\">\n                        {/* for our current stocks */}\n                        {myStocks.map((stock) => (\n                            <StatsRow\n                                key={stock.data.ticker}\n                                name={stock.data.ticker}\n                                openPrice={stock.info.o}\n                                shares={stock.data.shares}\n                                price={stock.info.c}\n                            />\n                        ))}\n                    </div>\n                </div>\n                <div className=\"stats__header stats__lists\">\n                    <p>Lists</p>\n                </div>\n                <div className=\"stats__content\">\n                    <div className=\"stats__rows\">\n                        {/* stocks we can buy */}\n                        {stockData.map((stock) => (\n                            <StatsRow\n                                key={stock.name}\n                                name={stock.name}\n                                openPrice={stock.o}\n                                price={stock.c}\n                            />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/LineGraph.js",["65"],"import React, {useEffect, useState} from 'react';\nimport { Line } from 'react-chartjs-2';\nimport './LineGraph.css';\n\nexport default function LineGraph() {\n    \n    const [graphData, setGraphData] = useState([]); \n\n    const data = \n        [{\n            x: 10, \n            y: 20\n        }, {\n            x: 15,\n            y: 10\n        }, {\n            x: 12,\n            y: 4\n        }\n    ]\n\n    const createMockData = () => {\n        let data = [];\n        let value = 50;\n        for(var i = 0; i < 366; i++){\n          let date = new Date();\n          date.setHours(0,0,0,0);\n          date.setDate(i);\n          value += Math.round((Math.random() < 0.5 ? 1 : 0) * Math.random() * 10);\n          data.push({x: date, y: value});\n        }\n        setGraphData(data);\n    }\n\n    useEffect(() => {\n        createMockData();\n    }, [])\n\n    return (\n        <div className=\"linegraph\">\n            <Line \n                data={{\n                    datasets: [\n                        {\n                            type: \"line\",\n                            data: graphData,\n                            backgroundColor: \"black\",\n                            borderColor: \"#5AC53B\",\n                            borderWidth: 2,\n                            pointBorderColor: 'rgba(0, 0, 0, 0)',\n                            pointBackgroundColor: 'rgba(0, 0, 0, 0)',\n                            pointHoverBackgroundColor: '#5AC53B',\n                            pointHoverBorderColor: '#000000',\n                            pointHoverBorderWidth: 4,\n                            pointHoverRadius: 6,\n                        }\n                    ]\n                }}\n                options={{\n                    maintainAspectRatio: false,\n                    legend: {\n                        display: false\n                    },\n                    tooltips: {\n                        mode: \"index\",\n                        intersect: false\n                    },\n                    scales: {\n                        xAxes: [\n                            {\n                              type: \"time\",\n                              time: {\n                                format: \"MM/DD/YY\",\n                                tooltipFormat: \"ll\",\n                              },\n                              ticks: {\n                                display: false,\n                              }\n                            },\n                        ],\n                        yAxes: [{\n                            ticks: {\n                                display: false\n                            }\n                        }]\n                    }\n                }}\n            />\n        </div>\n    )\n}\n","/Users/damianodelbello/Documents/Web Development/React/robinhood/src/StatsRow.js",[],"/Users/damianodelbello/Documents/Web Development/React/robinhood/src/firebase.js",[],"/Users/damianodelbello/Documents/Web Development/React/robinhood/src/TimeLine.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"66","replacedBy":"70"},{"ruleId":"68","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":11,"column":21,"nodeType":"74","endLine":11,"endColumn":49},{"ruleId":"75","severity":1,"message":"76","line":22,"column":21,"nodeType":"74","endLine":22,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":23,"column":21,"nodeType":"74","endLine":23,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":24,"column":21,"nodeType":"74","endLine":24,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":25,"column":21,"nodeType":"74","endLine":25,"endColumn":33},{"ruleId":"75","severity":1,"message":"76","line":26,"column":21,"nodeType":"74","endLine":26,"endColumn":33},{"ruleId":"66","replacedBy":"77"},{"ruleId":"68","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":27,"nodeType":"81","messageId":"82","endLine":11,"endColumn":36},{"ruleId":"83","severity":1,"message":"84","line":25,"column":41,"nodeType":"85","messageId":"86","endLine":25,"endColumn":43},{"ruleId":"83","severity":1,"message":"84","line":57,"column":32,"nodeType":"85","messageId":"86","endLine":57,"endColumn":34},{"ruleId":"87","severity":1,"message":"88","line":72,"column":8,"nodeType":"89","endLine":72,"endColumn":10,"suggestions":"90"},{"ruleId":"79","severity":1,"message":"91","line":9,"column":11,"nodeType":"81","messageId":"82","endLine":9,"endColumn":15},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],["92"],["93"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["92"],["93"],"no-unused-vars","'setTopics' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["94"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [getMyStocks]",{"range":"97","text":"98"},[2037,2039],"[getMyStocks]"]